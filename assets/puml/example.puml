' This file was generated by tsplot (https://github.com/JanUnld/tsplot#readme)
@startuml
interface ProjectFile {
    + source: ts.SourceFile
    + imports: Import[]
    + members: Member[]
}
interface ProjectViewOptionsBase {
    + fileFilter?: SourceFileFilterFn[]
    + memberFilter?: MemberFilterFn[]
}
interface ProjectViewOptionsWithFiles {
    + fileNames: string[]
    + compilerOptions: ts.CompilerOptions
}
interface ProjectViewOptionsWithTsConfigPath {
    + tsConfigPath: string
}
interface ProjectViewOptionsWithProgram {
    + program: ts.Program
}
interface ProjectViewOptions {
    __ Type __
    ProjectViewOptionsWithFiles | ProjectViewOptionsWithTsConfigPath | ProjectViewOptionsWithProgram
}
class ProjectView {
    - _typeChecker: ts.TypeChecker
    - _program: ts.Program
    - _files: ProjectFile[]
    - _members: Member[]
    + filter: FilterSet<Member>
    + files: ProjectFile[]
    + members: Member[]
    + getDependencyMembers(member: Member, options?: { depth?: number | undefined; }): Promise<Member[]>
    + getDependentMembers(member: Member, options?: { depth?: number | undefined; }): Promise<Member[]>
    + getMembersOfKind(kind: MemberKind): Member[]
    + getMemberByName(name: string): Member | undefined
    + getFileOfMember(member: Member): ProjectFile | undefined
    + hasMember(memberOrName: string | Member): boolean
    + getExportedMembersOfFile(file: ProjectFile): Member[] | undefined
    + getProgram(): ts.Program
    - _getProjectFiles(filters?: SourceFileFilterFn[]): ProjectFile[]
    - _getDirectDeps(member: Member): Dependency[]
}
class ProjectGraph {
    - _members: Member[]
    + filter: FilterSet<Member>
    + members: Member[]
    + edges: Edge[]
    + getEdgesOfMember(member: Member): Edge[]
    + {static} fromView(view: ProjectView, options?: { keepFilter?: boolean | undefined; filter?: MemberFilterFn[] | FilterSet<Member> | undefined; }): ProjectGraph
}
interface ProjectGraphOptions {
    + filter?: MemberFilterFn[] | FilterSet<Member>
    + members: Member[]
}
interface TemplateContext {
    + projectView: ProjectView
}
interface TemplateFileRenderer {
    + setBaseDir(): void
    + render(): string
}
interface RenderOptions {
    + target: string
    + renderer?: TemplateFileRenderer
    + baseDir?: string
}
protocol render {
    __ Function __
    (template: BuiltInTemplate | string, options: RenderOptions) => string
}
ProjectViewOptionsBase..>ProjectViewOptionsWithFiles
ProjectViewOptionsBase..>ProjectViewOptionsWithTsConfigPath
ProjectViewOptionsBase..>ProjectViewOptionsWithProgram
ProjectViewOptionsWithFiles..>ProjectViewOptions
ProjectViewOptionsWithTsConfigPath..>ProjectViewOptions
ProjectViewOptionsWithProgram..>ProjectViewOptions
ProjectViewOptions..>ProjectView
ProjectFile..>ProjectView
ProjectGraphOptions..>ProjectGraph
ProjectView-->ProjectGraph
ProjectView-->TemplateContext
TemplateContext..>TemplateFileRenderer
TemplateContext..>RenderOptions
TemplateFileRenderer..>RenderOptions
RenderOptions..>render
ProjectGraph-->render
TemplateFileRenderer..>render
@enduml
